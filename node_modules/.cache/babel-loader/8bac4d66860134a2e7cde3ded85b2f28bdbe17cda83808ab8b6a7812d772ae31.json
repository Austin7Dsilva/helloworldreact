{"ast":null,"code":"var _jsxFileName = \"/Users/austindsilva/Documents/GitHub/helloworldreact/reactproject/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Options from \"./components/Options\";\nimport Output from \"./components/Output\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [paragraphs, setParagraphs] = useState([]);\n  const [tag, setTag] = useState('h1');\n  const [inputValue, setInputValue] = useState(1);\n  const [includeHtml, setIncludeHtml] = useState(\"Yes\");\n  useEffect(() => {\n    const url = `https://baconipsum.com/api/?type=all-meat&paras=${inputValue}&start-with-lorem=1`;\n    fetch(url).then(res => res.json()).then(data => setParagraphs(data));\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Lorem Ipsum Text Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Options, {\n        paragraphs: paragraphs,\n        includeHtml: includeHtml,\n        setIncludeHtml: setIncludeHtml,\n        inputValue: inputValue,\n        setInputValue: setInputValue,\n        tag: tag,\n        setTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        paragraphs: paragraphs,\n        tag: tag,\n        includeHtml: includeHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"uZ5kQuwkH86qQqPXxIZBdjzNDfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Options","Output","jsxDEV","_jsxDEV","App","_s","paragraphs","setParagraphs","tag","setTag","inputValue","setInputValue","includeHtml","setIncludeHtml","url","fetch","then","res","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/austindsilva/Documents/GitHub/helloworldreact/reactproject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Options from \"./components/Options\";\nimport Output from \"./components/Output\";\nimport './App.css';\n\nconst App = () =>{\n  const [paragraphs, setParagraphs] = useState([]);\n  const [tag, setTag] = useState('h1');\n  const [inputValue, setInputValue] = useState(1);\n  const [includeHtml, setIncludeHtml] = useState(\"Yes\");\n\n  useEffect(() => {\n    const url = `https://baconipsum.com/api/?type=all-meat&paras=${inputValue}&start-with-lorem=1`;\n\n    fetch(url)\n    .then(res => res.json()) \n    .then(data => setParagraphs(data))\n  }, [inputValue]);\n  \n\n  return(\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"title\">\n            <h1>Lorem Ipsum Text Generator</h1>\n          </div>\n          <Options\n            paragraphs={paragraphs}\n            includeHtml={includeHtml}\n            setIncludeHtml={setIncludeHtml}\n            inputValue={inputValue}\n            setInputValue={setInputValue}\n            tag={tag}\n            setTag={setTag}\n          />\n          <Output paragraphs={paragraphs} tag={tag} includeHtml={includeHtml} />\n        </div>\n      </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACf,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMe,GAAG,GAAI,mDAAkDJ,UAAW,qBAAoB;IAE9FK,KAAK,CAACD,GAAG,CAAC,CACTE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIZ,aAAa,CAACY,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAGhB,oBACIP,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBlB,OAAA;QAAKiB,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBlB,OAAA;UAAAkB,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACNtB,OAAA,CAACH,OAAO;QACNM,UAAU,EAAEA,UAAW;QACvBM,WAAW,EAAEA,WAAY;QACzBC,cAAc,EAAEA,cAAe;QAC/BH,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA,aAAc;QAC7BH,GAAG,EAAEA,GAAI;QACTC,MAAM,EAAEA;MAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFtB,OAAA,CAACF,MAAM;QAACK,UAAU,EAAEA,UAAW;QAACE,GAAG,EAAEA,GAAI;QAACI,WAAW,EAAEA;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACpB,EAAA,CAlCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}